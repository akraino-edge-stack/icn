# SPDX-License-Identifier: Apache-2.0
# Copyright Â© 2019 Intel Corporation

---

- name: include common vars
  include_vars: ../common/defaults/main.yml

- name: add firewall rules
  include_tasks: add_firewall_rules.yml

- block:
  - name: output hostname
    command: hostname
    register: hostname_output
  - set_fact:
      k8s_master_node_name: "{{ hostname_output.stdout | lower }}"
  - name: set label on master node
    command: kubectl label nodes {{ k8s_master_node_name }} 5g-openness=true --overwrite 

- name: create directory for certs used by AF and NEF
  file:
    name: "{{ certs_dest }}/ngc"
    state: directory

- name: build AF component
  shell: source /etc/profile && make af
  args:
    chdir: "{{ git_repo_ngc_dir }}"

- name: copy AF binaries to build folder
  copy:
    src: "{{ git_repo_ngc_dist_dir }}/af"
    dest: "{{ git_repo_ngc_build_dir }}/networkedge/af"

- name: copy af.json configuration file
  copy:
    src: "{{ git_repo_ngc_dir }}/configs/af.json"
    dest: "{{ configs_dest }}/ngc"

- name: update af config file
  shell: jq '.ServerConfig.Hostname="afservice" | .ServerConfig.UIEndpoint="http://{{ controller_ip }}:3020" | .CliConfig.NEFHostname="nefservice"' /etc/openness/configs/ngc/af.json | sponge /etc/openness/configs/ngc/af.json

- name: build AF docker image
  docker_image:
    name: af-image:1.0
    source: build
    build:
      path: "{{ git_repo_ngc_build_dir }}/networkedge/af"
      pull: yes
      use_config_proxy: yes

- name: create ngc namespace if needed
  block:
  - name: check if ngc namespace exists
    shell: kubectl get ns ngc
    ignore_errors: yes
    register: get_ns_ngc
  - name: create ngc namespace
    shell: kubectl create namespace ngc
    when: get_ns_ngc.rc == 1

- name: deploy AF
  shell: kubectl create -f {{ git_repo_ngc_dir }}/scripts/networkedge/ngc/podAF.yaml

- name: deploy NEF
  shell: kubectl create -f {{ git_repo_ngc_dir }}/scripts/networkedge/ngc/podNEF.yaml

