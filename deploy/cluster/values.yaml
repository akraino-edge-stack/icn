# clusterName is the name of the cluster.
clusterName: cluster-1

# clusterLabels is a dictionary of labels.  The provider label is
# shown as an example only; additional labels may be provided.
clusterLabels:
  provider: icn

# numControlPlaneMachines is the number of control plane nodes.
numControlPlaneMachines: 1

# numWorkerMachines is the number of worker nodes.
numWorkerMachines: 1

# controlPlaneEndpoint is the address of the control plane endpoint.
# With a highly-available control plane this would typically be a
# load-balanced virtual IP, however other configurations are possible
# as shown below.
controlPlaneEndpoint: 192.168.151.254
# controlPlanePrefix is the network mask of the control plane
# endpoint.
controlPlanePrefix: 24

# keepalived is one mechanism to provide a virtual control plane
# endpoint.  keepalived uses the VRRP protocol to assign the control
# plane endpoint among the control plane nodes.
#keepalived:
#  # The interface must be the same as the baremetal interface.
#  interface: ens6
#  routerId: 3

# controlPlaneHostSelector uses labels added to the BareMetalHost
# resources to select specific machines for the control plane. Using
# this mechanism for example, one could assign a static address of a
# known machine to the control plane endpoint.
#controlPlaneHostSelector:
#  matchLabels:
#    machine: machine-1
# controlPlaneHostSelector uses labels added to the BareMetalHost
# resources to select specific machines for workers.
#workersHostSelector:
#  matchLabels:
#    machine: machine-2

# networks can be used when DHCP is present and the network
# configuration of each machine may be provided with a template
# containing the names of the baremetal and provisioning interfaces.
#networks:
#  baremetal:
#    interface: ens6
#  provisioning:
#    interface: ens5

# userData is used to provide cloud-init data for machines in the
# cluster.  See
# https://cloudinit.readthedocs.io/en/latest/topics/modules.html#users-and-groups
# for more information.
userData:
  name: ubuntu
  # hashedPasswd was created with `mkpasswd --method=SHA-512 --rounds
  # 10000 "mypasswd"`.
  hashedPassword: $6$rounds=10000$PJLOBdyTv23pNp$9RpaAOcibbXUMvgJScKK2JRQioXW4XAVFMRKqgCB5jC4QmtAdbA70DU2jTcpAd6pRdEZIaWFjLCNQMBmiiL40.
  # sshAuthorizedKey key will also be authorized to login as the root
  # user.
  sshAuthorizedKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrxu+fSrU51vgAO5zP5xWcTU8uLv4MkUZptE2m1BJE88JdQ80kz9DmUmq2AniMkVTy4pNeUW5PsmGJa+anN3MPM99CR9I37zRqy5i6rUDQgKjz8W12RauyeRMIBrbdy7AX1xasoTRnd6Ta47bP0egiFb+vUGnlTFhgfrbYfjbkJhVfVLCTgRw8Yj0NSK16YEyhYLbLXpix5udRpXSiFYIyAEWRCCsWJWljACr99P7EF82vCGI0UDGCCd/1upbUwZeTouD/FJBw9qppe6/1eaqRp7D36UYe3KzLpfHQNgm9AzwgYYZrD4tNN6QBMq/VUIuam0G1aLgG8IYRLs41HYkJ root@jump

# flux provides bootstrapping configuration of the cluster.  When
# enabled, the Flux controllers will be installed into the cluster and
# begin reconciling the resources located at the specified location.
flux:
  repositoryName: icn
  url: https://gerrit.akraino.org/r/icn
  branch: master
  # path is the repository to the resources to be applied to the
  # cluster.
  path: ./deploy/site/cluster-icn
  # decryptionSecret is the SOPS secret key used by Flux to decrypt
  # any SOPS-encrypted data stored in the resources at path.
  #decryptionSecret: |
  #  -----BEGIN PGP PRIVATE KEY BLOCK-----
  #  ...

# containerRuntime may be containerd or docker.
containerRuntime: containerd

# podCidr is the POD CIDR.
podCidr: 10.244.64.0/18

# cni is the cluster CNI.  Supported CNIs include calico and flannel.
cni: calico

# All the version info is captured in one block here.  Care must
# be taken to ensure that the OS, Kubernetes, and CRI (containerd
# or docker) versions are all compatible.
#
# Refer to the below for further information:
# - https://github.com/kubernetes/kubernetes/blob/master/build/dependencies.yaml
# - https://download.docker.com/linux/ubuntu/dists/focal/stable/binary-amd64/Packages
#
# imageName is the OS image.
imageName: focal-server-cloudimg-amd64.img
# k8s is the version of Kubernetes installed.
k8sVersion: v1.21.6
# kubeVersion is the version of the kubelet, kubeadm, and kubectl
# packages.
kubeVersion: 1.21.6-00
# containerd is the version of containerd installed.
containerdVersion: 1.4.11-1
# dockerVersion is the version of docker installed.
dockerVersion: 5:20.10.10~3-0~ubuntu-focal
# dockerRegistryMirrors are optional mirrors for docker.io, in priority order
#dockerRegistryMirrors: ["https://myregistry.com:5000"]
# preKubeadmCommands execute on the provisioned machine before the
# container runtime or K8s is configured
#preKubeadmCommands:
#- apt-get update -y
#- apt-get install -y unzip
