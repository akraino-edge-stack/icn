
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: hostfirmwaresettings.metal3.io
spec:
  group: metal3.io
  names:
    kind: HostFirmwareSettings
    listKind: HostFirmwareSettingsList
    plural: hostfirmwaresettings
    singular: hostfirmwaresettings
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HostFirmwareSettings is the Schema for the hostfirmwaresettings
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HostFirmwareSettingsSpec defines the desired state of HostFirmwareSettings
            properties:
              settings:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  x-kubernetes-int-or-string: true
                description: Settings are the desired firmware settings stored as
                  name/value pairs. This will be populated with the actual firmware
                  settings and only contain the settings that can be modified (i.e.
                  not ReadOnly), to facilitate making changes.
                type: object
            required:
            - settings
            type: object
          status:
            description: HostFirmwareSettingsStatus defines the observed state of
              HostFirmwareSettings
            properties:
              schema:
                description: FirmwareSchema is a reference to the Schema used to describe
                  each FirmwareSetting. By default, this will be a Schema in the same
                  Namespace as the settings but it can be overwritten in the Spec
                properties:
                  name:
                    description: '`name` is the reference to the schema.'
                    type: string
                  namespace:
                    description: '`namespace` is the namespace of the where the schema
                      is stored.'
                    type: string
                required:
                - name
                - namespace
                type: object
              settings:
                additionalProperties:
                  type: string
                description: Settings are the actual firmware settings stored as name/value
                  pairs
                type: object
            required:
            - settings
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
